
character.h,388
# define CHARACTER_H2,20
typedef enum kill_type 9,103
  kill_direct,10,128
  kill_avenged,11,143
  num_kill_types12,159
} kill_type_t;13,176
class character 16,193
  virtual ~character(18,220
  char symbol;19,245
  pair_t position;20,260
  int32_t speed;21,279
  uint32_t alive;22,296
  uint32_t color;23,314
  uint32_t sequence_number;31,879
  uint32_t kills[kills32,907

descriptions.h,2493
# define DESCRIPTIONS_H2,23
# undef swap5,69
typedef struct dungeon dungeon_t;11,157
typedef enum object_type 17,324
  objtype_no_type,18,351
  objtype_WEAPON,19,370
  objtype_OFFHAND,20,388
  objtype_RANGED,21,407
  objtype_LIGHT,22,425
  objtype_ARMOR,23,442
  objtype_HELMET,24,459
  objtype_CLOAK,25,477
  objtype_GLOVES,26,494
  objtype_BOOTS,27,512
  objtype_AMULET,28,529
  objtype_RING,29,547
  objtype_SCROLL,30,563
  objtype_BOOK,31,581
  objtype_FLASK,32,597
  objtype_GOLD,33,614
  objtype_AMMUNITION,34,630
  objtype_FOOD,35,652
  objtype_WAND,36,668
  objtype_CONTAINER37,684
} object_type_t;38,704
class monster_description 42,758
  std::string name,44,795
  std::string name, description;44,795
  char symbol;45,828
  std::vector<uint32_t> color;46,843
  uint32_t abilities;47,874
  dice speed,48,896
  dice speed, hitpoints,48,896
  dice speed, hitpoints, damage;48,896
  uint32_t rarity;49,929
  int alive;50,948
  int dead;51,961
  monster_description(52,973
  char get_symbol(67,1555
  inline void is_alive(69,1635
  inline void remove_alive(70,1670
  inline void is_dead(71,1709
class object_description 74,1746
  std::string name,76,1782
  std::string name, description;76,1782
  object_type_t type;77,1815
  uint32_t color;78,1837
  dice hit,79,1855
  dice hit, damage,79,1855
  dice hit, damage, dodge,79,1855
  dice hit, damage, dodge, defence,79,1855
  dice hit, damage, dodge, defence, weight,79,1855
  dice hit, damage, dodge, defence, weight, speed,79,1855
  dice hit, damage, dodge, defence, weight, speed, attribute,79,1855
  dice hit, damage, dodge, defence, weight, speed, attribute, value;79,1855
  bool artifact;80,1924
  uint32_t rarity;81,1941
  int exists;82,1960
  object_description(83,1974
  inline const std::string &get_name(get_name107,2926
  inline const std::string &get_description(get_description108,2988
  inline const object_type_t get_type(109,3064
  inline const uint32_t get_color(110,3127
  inline const dice &get_hit(get_hit111,3187
  inline const dice &get_damage(get_damage112,3240
  inline const dice &get_dodge(get_dodge113,3299
  inline const dice &get_defence(get_defence114,3356
  inline const dice &get_weight(get_weight115,3417
  inline const dice &get_speed(get_speed116,3476
  inline const dice &get_attribute(get_attribute117,3533
  inline const dice &get_value(get_value118,3598
  inline void exists_(119,3655
  inline void exists_x(120,3691

dice.h,375
# define DICE_H2,15
class dice 7,75
  int32_t base;9,98
  uint32_t number,10,114
  uint32_t number, sides;10,114
  dice(12,149
  dice(15,197
  inline void set(19,304
  inline void set_base(25,452
  inline void set_number(29,520
  inline void set_sides(33,597
  inline int32_t get_base(39,738
  inline int32_t get_number(43,797
  inline int32_t get_sides(47,860

dims.h,147
# define DIMS_H2,15
typedef enum dim 7,190
  dim_x,8,209
  dim_y,9,218
  num_dims10,227
} dim_t;11,238
typedef int16_t pair_t[pair_t13,248

dungeon.h,2615
# define DUNGEON_H2,18
#define DUNGEON_X 11,148
#define DUNGEON_Y 12,182
#define MIN_ROOMS 13,216
#define MAX_ROOMS 14,249
#define ROOM_MIN_X 15,283
#define ROOM_MIN_Y 16,316
#define ROOM_MAX_X 17,349
#define ROOM_MAX_Y 18,383
#define PC_VISUAL_RANGE 19,417
#define NPC_VISUAL_RANGE 20,450
#define PC_SPEED 21,484
#define NPC_MIN_SPEED 22,518
#define NPC_MAX_SPEED 23,551
#define MAX_MONSTERS 24,585
#define SAVE_DIR 25,619
#define DUNGEON_SAVE_FILE 26,660
#define DUNGEON_SAVE_SEMANTIC 27,701
#define DUNGEON_SAVE_VERSION 28,747
#define MONSTER_DESC_FILE 29,781
#define OBJECT_DESC_FILE 30,831
#define mappair(32,881
#define mapxy(33,938
#define hardnesspair(34,973
#define hardnessxy(35,1040
#define charpair(36,1085
#define charxy(37,1153
enum __attribute__ ((__packed__)) terrain_type 39,1200
  ter_debug,40,1249
  ter_unknown,41,1262
  ter_wall,42,1277
  ter_wall_immutable,43,1289
  ter_floor,44,1311
  ter_floor_room,45,1324
  ter_floor_hall,46,1342
  ter_stairs,47,1360
  ter_stairs_up,48,1374
  ter_stairs_down49,1391
typedef struct room 52,1413
  pair_t position;53,1435
  pair_t size;54,1454
} room_t;55,1469
class dungeon 60,1505
  dungeon(62,1530
  dungeon() : num_rooms(0), rooms(0), map{ter_wall}, hardness{hardness62,1530
              pc_distance{pc_distance63,1596
              pc_distance{0}, pc_tunnel{pc_tunnel63,1596
              pc_distance{0}, pc_tunnel{0}, character_map{character_map63,1596
              pc_distance{0}, pc_tunnel{0}, character_map{0}, PC(63,1596
              num_monsters(64,1665
              num_monsters(0), max_monsters(64,1665
              num_monsters(0), max_monsters(0), character_sequence_number(64,1665
              time(65,1743
              time(0), is_new(65,1743
              time(0), is_new(0), quit(65,1743
              time(0), is_new(0), quit(0), monster_descriptions(65,1743
              object_descriptions(66,1810
  uint32_t num_rooms;67,1849
  room_t *rooms;rooms68,1871
  terrain_type map[map69,1888
  uint8_t hardness[hardness78,2539
  uint8_t pc_distance[pc_distance79,2581
  uint8_t pc_tunnel[pc_tunnel80,2626
  object * object_map[object_map81,2669
  character *character_map[character_map82,2714
  pc *PC;PC83,2764
  heap_t events;84,2774
  uint16_t num_monsters;85,2791
  uint16_t max_monsters;86,2816
  uint32_t character_sequence_number;87,2841
  uint32_t time;93,3265
  uint32_t is_new;94,3282
  uint32_t quit;95,3301
  std::vector<monster_description> monster_descriptions;96,3318
  std::vector<object_description> object_descriptions;97,3375

event.h,227
# define EVENT_H2,16
typedef enum eventype 8,79
  event_character_turn,9,103
} eventype_t;10,127
struct event 12,142
  eventype_t type;13,157
  uint32_t time;14,176
  uint32_t sequence;15,193
    character *c;c17,224

heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

io.h,19
# define IO_H2,13

move.h,21
# define MOVE_H2,15

npc.h,1279
#define NPC_H2,14
#define NPC_SMART 11,128
#define NPC_TELEPATH 12,157
#define NPC_TUNNEL 13,189
#define NPC_ERRATIC 14,219
#define NPC_PASS_WALL 15,250
#define NPC_DESTROY_OBJ 16,283
#define NPC_PICKUP_OBJ 17,318
#define NPC_UNIQ 18,352
#define NPC_BOSS 19,380
#define NPC_BIT09 20,408
#define NPC_BIT10 21,437
#define NPC_BIT11 22,466
#define NPC_BIT12 23,495
#define NPC_BIT13 24,524
#define NPC_BIT14 25,553
#define NPC_BIT15 26,582
#define NPC_BIT16 27,611
#define NPC_BIT17 28,640
#define NPC_BIT18 29,669
#define NPC_BIT19 30,698
#define NPC_BIT20 31,727
#define NPC_BIT21 32,756
#define NPC_BIT22 33,785
#define NPC_BIT23 34,814
#define NPC_BIT24 35,843
#define NPC_BIT25 36,872
#define NPC_BIT26 37,901
#define NPC_BIT27 38,930
#define NPC_BIT28 39,959
#define NPC_BIT29 40,988
#define NPC_BIT30 41,1017
#define NPC_BIT31 42,1046
#define has_characteristic(44,1076
#define is_unique(46,1173
typedef uint32_t npc_characteristics_t;50,1267
class npc 52,1308
  dice dam;57,1400
  npc_characteristics_t characteristics;58,1412
  uint32_t have_seen_pc;59,1453
  pair_t pc_last_known_position;60,1478
  std::string name;61,1511
  std::string description;62,1531
  uint32_t hp;63,1558
  monster_description &monster;monster64,1573

objects.h,436
# define OBJECT_H2,17
class object 8,99
    std::string name;11,131
    std::string desc;12,153
    object_type_t type;13,175
    uint32_t color;14,199
    dice dam;16,299
    int32_t hit;17,313
    int32_t dodge;18,330
    int32_t def;19,349
    int32_t weight;20,366
    int32_t speed;21,386
    int32_t attr;22,405
    int32_t val;23,423
    pair_t pos;24,440
    object_description &od;od25,456
    ~object(27,531

path.h,54
# define PATH_H2,15
# define HARDNESS_PER_TURN 4,32

pc.h,121
# define PC_H2,13
class pc 10,116
  terrain_type known_terrain[known_terrain12,155
  uint8_t visible[visible13,207

utils.h,123
# define UTILS_H2,16
# define rand_under(9,190
# define rand_range(13,333
#define malloc(15,407
#define UNUSED(21,551

character.cpp,531
void character_delete(9,117
int16_t *character_get_pos(character_get_pos14,170
int16_t character_get_y(19,238
int16_t character_set_y(24,316
int16_t character_get_x(29,403
int16_t character_set_x(34,481
void character_die(39,568
int character_is_alive(44,622
char character_get_symbol(49,689
uint32_t character_get_speed(54,760
uint32_t character_get_dkills(59,833
uint32_t character_get_ikills(64,920
uint32_t character_increment_dkills(69,1008
uint32_t character_increment_ikills(74,1097
uint32_t can_see(79,1202

descriptions.cpp,2875
#define MONSTER_FILE_SEMANTIC 20,336
#define MONSTER_FILE_VERSION 21,404
#define NUM_MONSTER_DESCRIPTION_FIELDS 22,446
#define OBJECT_FILE_SEMANTIC 23,487
#define OBJECT_FILE_VERSION 24,554
#define NUM_OBJECT_DESCRIPTION_FIELDS 25,596
  const char *name;name28,661
  const uint32_t value;29,681
} abilities_lookup[abilities_lookup30,705
#define color_lu_entry(51,1605
  const char *name;name53,1683
  const uint32_t value;54,1703
} colors_lookup[colors_lookup55,1727
#define type_lu_entry(71,2214
  const char *name;name73,2290
  const object_type_t value;74,2310
} types_lookup[types_lookup75,2339
static inline void eat_whitespace(121,3454
static inline void eat_blankspace(128,3560
static uint32_t parse_name(135,3666
static uint32_t parse_monster_name(159,4375
static uint32_t parse_monster_symb(166,4587
static uint32_t parse_integer(188,4936
static uint32_t parse_monster_rrty(209,5286
static uint32_t parse_color(216,5502
static uint32_t parse_monster_color(253,6077
static uint32_t parse_desc(292,6734
static uint32_t parse_monster_desc(333,7469
typedef uint32_t (*dice_parser_func_t)dice_parser_func_t340,7681
static uint32_t parse_dice(344,7853
static dice_parser_func_t parse_monster_speed 370,8280
static dice_parser_func_t parse_monster_dam 371,8340
static dice_parser_func_t parse_monster_hp 372,8398
static uint32_t parse_monster_abil(374,8456
static uint32_t parse_monster_description(411,9137
static uint32_t parse_object_name(546,13959
static uint32_t parse_object_art(554,14169
static uint32_t parse_object_rrty(573,14559
static uint32_t parse_object_desc(580,14772
static uint32_t parse_object_type(587,14981
static uint32_t parse_object_color(624,15582
static dice_parser_func_t parse_object_hit 631,15794
static dice_parser_func_t parse_object_dam 632,15851
static dice_parser_func_t parse_object_dodge 633,15908
static dice_parser_func_t parse_object_def 634,15967
static dice_parser_func_t parse_object_weight 635,16024
static dice_parser_func_t parse_object_speed 636,16084
static dice_parser_func_t parse_object_attr 637,16143
static dice_parser_func_t parse_object_val 638,16201
static uint32_t parse_object_description(640,16259
static uint32_t parse_monster_descriptions(820,23026
static uint32_t parse_object_descriptions(850,23830
uint32_t parse_descriptions(880,24626
uint32_t print_descriptions(919,25295
void monster_description::set(set938,25753
std::ostream &monster_description::print(print959,26486
std::ostream &operator<<(operator<<993,27363
uint32_t destroy_descriptions(998,27455
void object_description::set(set1006,27586
std::ostream &object_description::print(print1037,28640
std::ostream &operator<<(operator<<1062,29354
npc *monster_description::gen_monster(gen_monster1066,29446
int check_if_eligable_m(1090,30096
int check_if_eligable_o(1104,30500

dice.cpp,114
int32_t dice::roll(roll6,58
std::ostream &dice::print(print22,257
std::ostream &operator<<(operator<<27,358

dungeon.cpp,1590
#define DUMP_HARDNESS_IMAGES 22,374
typedef struct corridor_path 24,406
  heap_node_t *hn;hn25,437
  uint8_t pos[pos26,456
  uint8_t from[from27,474
  int32_t cost;28,493
} corridor_path_t;29,509
static uint32_t adjacent_to_room(49,924
static uint32_t is_open_space(57,1183
static int32_t corridor_path_cmp(62,1280
static void dijkstra_corridor(66,1430
static void dijkstra_corridor_inv(165,5184
#define hardnesspair_inv(218,6523
static int connect_two_rooms(268,9194
static int create_cycle(287,9844
static int connect_rooms(329,11408
int gaussian[gaussian342,11599
typedef struct queue_node 350,11755
  int x,351,11783
  int x, y;351,11783
  struct queue_node *next;next352,11795
} queue_node_t;353,11822
static int smooth_hardness(355,11839
static int empty_dungeon(514,16278
static int place_rooms(535,16696
static void place_stairs(572,17881
static int make_rooms(594,18514
int gen_dungeon(617,19086
void render_dungeon(630,19246
void delete_dungeon(673,20196
void init_dungeon(681,20388
int write_dungeon_map(690,20649
int write_rooms(703,20876
uint16_t count_up_stairs(725,21346
uint16_t count_down_stairs(741,21595
int write_stairs(757,21848
uint32_t calculate_dungeon_size(789,22601
int write_dungeon(800,23070
int read_dungeon_map(866,24640
int read_stairs(889,25236
int read_rooms(912,25711
int read_dungeon(970,27645
int read_pgm(1051,29537
void render_hardness_map(1136,31949
void render_movement_cost_map(1159,32474
void render_distance_map(1181,32979
void render_tunnel_distance_map(1222,34047
void new_dungeon(1263,35118

event.cpp,174
static uint32_t next_event_number(6,63
int32_t compare_events(16,389
event *new_event(new_event27,701
event *update_event(update_event44,995
void event_delete(52,1137

io.cpp,1041
static dungeon *thedungeon;thedungeon14,228
typedef struct io_message 16,257
  char msg[msg19,438
  struct io_message *next;next20,454
} io_message_t;21,481
static io_message_t *io_head,io_head23,498
static io_message_t *io_head, *io_tail;io_tail23,498
void io_init_terminal(25,539
void io_reset_terminal(42,1024
void io_queue_message(54,1184
static void io_print_message_queue(80,1591
void io_display_tunnel(100,2067
void io_display_distance(118,2475
static char hardness_to_char[hardness_to_char136,2876
void io_display_hardness(139,2978
static int compare_monster_distance(159,3807
static character *io_nearest_visible_monster(io_nearest_visible_monster170,4241
void io_display(202,4977
void io_display_no_fog(300,8124
void io_display_monster_list(366,10077
uint32_t io_teleport_pc(375,10273
static const char *adjectives[adjectives527,13403
static void io_scroll_monster_list(560,14185
static void io_list_monsters_display(589,14639
static void io_list_monsters(638,16311
void io_handle_input(668,17076

move.cpp,237
void do_combat(18,266
void move_character(104,3364
void do_moves(125,3940
void dir_nearest_wall(190,5964
uint32_t against_wall(202,6375
uint32_t in_corner(214,6859
static void new_dungeon_level(232,7483
uint32_t move_pc(248,7773

npc.cpp,851
static uint32_t max_monster_cells(13,193
#define min(27,438
void gen_monsters(33,538
void npc_next_pos_rand_tunnel(50,912
    uint32_t i;55,1001
    uint8_t a[a56,1017
void npc_next_pos_rand(109,1819
    uint32_t i;114,1901
    uint8_t a[a115,1917
void npc_next_pos_line_of_sight(151,2422
void npc_next_pos_line_of_sight_tunnel(182,3128
void npc_next_pos_gradient(221,3875
static void npc_next_pos_00(366,8600
static void npc_next_pos_01(381,9028
static void npc_next_pos_02(404,9686
static void npc_next_pos_03(412,9978
static void npc_next_pos_04(418,10143
static void npc_next_pos_05(433,10578
static void npc_next_pos_06(456,11243
static void npc_next_pos_07(464,11542
static void npc_next_pos_erratic(495,12491
void npc_next_pos(508,12764
uint32_t dungeon_has_npcs(516,12955
npc::npc(521,13024
npc::~npc(~npc551,14094

objects.cpp,70
object::object(3,22
void gen_object(12,509
void gen_objects(15,545

path.cpp,306
static dungeon *thedungeon;thedungeon16,689
typedef struct path 18,718
  heap_node_t *hn;hn19,740
  uint8_t pos[pos20,759
} path_t;21,777
static int32_t dist_cmp(23,788
static int32_t tunnel_cmp(30,1154
void dijkstra(37,1514
#define tunnel_movement_cost(147,6020
void dijkstra_tunnel(150,6112

pc.cpp,347
uint32_t pc_is_alive(12,151
void place_pc(17,212
void config_pc(30,704
uint32_t pc_next_pos(49,1049
uint32_t pc_in_room(147,5108
void pc_learn_terrain(162,5657
void pc_reset_visibility(168,5813
terrain_type pc_learned_terrain(179,5980
void pc_init_known_terrain(188,6217
void pc_observe_terrain(200,6430
int32_t is_illuminated(237,7435

rlg327.cpp,115
const char *victory victory14,210
const char *tombstone tombstone45,1781
void usage(66,2832
int main(77,3088

utils.cpp,25
int makedirectory(9,124
